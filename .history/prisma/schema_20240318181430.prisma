// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Resume {
  id      String @id @default(uuid())
  userId  String
  name    String
  email   String
  phone   String
  address String
  summary String

  fatherName String

  experience Experience[]
  education  Education[]
  skills     Skill[]
  languages  Language[]
  projects   Project[]
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
}

model Experience {
  id          String   @id @default(uuid())
  title       String
  company     String
  location    String
  startDate   DateTime
  endDate     DateTime
  description String
  resume      Resume   @relation(fields: [resumeId], references: [id])
  resumeId    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Education {
  id          String   @id @default(uuid())
  institution String
  degree      String
  major       String
  startDate   DateTime
  endDate     DateTime
  resume      Resume   @relation(fields: [resumeId], references: [id])
  resumeId    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Skill {
  id        String   @id @default(uuid())
  name      String
  level     String
  resume    Resume   @relation(fields: [resumeId], references: [id])
  resumeId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Language {
  id        String   @id @default(uuid())
  name      String
  level     String
  resume    Resume   @relation(fields: [resumeId], references: [id])
  resumeId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Project {
  id          String   @id @default(uuid())
  name        String
  description String
  startDate   DateTime
  endDate     DateTime
  resume      Resume   @relation(fields: [resumeId], references: [id])
  resumeId    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

